{"version":3,"sources":["reducers/InputReducer.js","reducers/index.js","store.js","components/Input.jsx","actions/index.js","components/Output.jsx","App.js","index.js"],"names":["InputReducer","state","user","email","action","type","payload","rootReducer","combineReducers","credentials","store","createStore","Input","dispatch","useDispatch","className","placeholder","onChange","ev","target","value","Output","st","useSelector","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAWeA,EAXM,WAA8C,IAA7CC,EAA4C,uDAApC,CAAEC,KAAM,GAAIC,MAAO,IAAMC,EAAW,uCAChE,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BAAKJ,GAAZ,IAAmBC,KAAME,EAAOE,UAClC,IAAK,YACH,OAAO,2BAAKL,GAAZ,IAAmBE,MAAOC,EAAOE,UACnC,QACE,OAAOL,ICAEM,EAJKC,YAAgB,CAClCC,YAAaT,ICCAU,EAFDC,YAAYJ,G,eCkBXK,EAnBD,WACZ,IAAMC,EAAWC,cACjB,OACE,0BAASC,UAAU,SAAnB,UACE,wCACA,uBACEV,KAAK,OACLW,YAAY,OACZC,SAAU,SAACC,GAAD,OAAQL,ECPjB,CACLR,KAAM,WACNC,QDK2CY,EAAGC,OAAOC,WAEnD,uBACEf,KAAK,QACLW,YAAY,QACZC,SAAU,SAACC,GAAD,OAAQL,ECLjB,CACLR,KAAM,YACNC,QDGwCY,EAAGC,OAAOC,eEIvCC,EAjBA,WACb,IAAMC,EAAKC,aAAY,SAACtB,GAAD,OAAWA,EAAMQ,eAExC,OACE,0BAASM,UAAU,SAAnB,UACE,uCACA,iCACE,sCADF,IACgBO,EAAGpB,QAEnB,uBACA,iCACE,wCACCoB,EAAGnB,aCDGqB,MATf,WACE,OACE,sBAAKT,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjB,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJkB,SAASC,eAAe,W","file":"static/js/main.58202561.chunk.js","sourcesContent":["const InputReducer = (state = { user: \"\", email: \"\" }, action) => {\n  switch (action.type) {\n    case \"REG_USER\":\n      return { ...state, user: action.payload };\n    case \"REG_EMAIL\":\n      return { ...state, email: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default InputReducer;\n","import { combineReducers } from \"redux\";\nimport InputReducer from \"./InputReducer\";\n\nconst rootReducer = combineReducers({\n  credentials: InputReducer,\n});\n\nexport default rootReducer;\n","import rootReducer from \"./reducers/index\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { useDispatch } from \"react-redux\";\nimport { addUsername, addEmail } from \"../actions/index\";\nconst Input = () => {\n  const dispatch = useDispatch();\n  return (\n    <section className=\"center\">\n      <h2>Input:</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        onChange={(ev) => dispatch(addUsername(ev.target.value))}\n      ></input>\n      <input\n        type=\"text>\"\n        placeholder=\"Email\"\n        onChange={(ev) => dispatch(addEmail(ev.target.value))}\n      ></input>\n    </section>\n  );\n};\n\nexport default Input;\n","import Input from \"../components/Input\";\n\nconst addUsername = (val) => {\n  return {\n    type: \"REG_USER\",\n    payload: val,\n  };\n};\n\nconst addEmail = (val) => {\n  return {\n    type: \"REG_EMAIL\",\n    payload: val,\n  };\n};\n\nexport { addUsername, addEmail };\n","import { useSelector } from \"react-redux\";\n\nconst Output = () => {\n  const st = useSelector((state) => state.credentials);\n\n  return (\n    <section className=\"center\">\n      <h2>Data:</h2>\n      <span>\n        <b>Name:</b> {st.user}\n      </span>\n      <br></br>\n      <span>\n        <b>Email: </b>\n        {st.email}\n      </span>\n    </section>\n  );\n};\nexport default Output;\n","import \"./App.css\";\nimport Input from \"./components/Input\";\nimport Output from \"./components/Output\";\n\nfunction App() {\n  return (\n    <div className=\"center\">\n      <Input />\n      <Output />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}